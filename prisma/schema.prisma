generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id            Int             @id @default(autoincrement())
    firstName     String          @default("")
    lastName      String          @default("")
    bio           String          @default("")
    username      String?         @unique
    login         String          @unique
    password      String
    ChatFolder    ChatFolder[]
    Session       Session[]
    ArchiveChat   ArchiveChat[]
    UnarchiveChat UnarchiveChat[]
}

model Message {
    id              Int      @id @default(autoincrement())
    messageId       Int
    senderId        Int
    chatId          Int
    text            String
    sendTime        DateTime @default(now())
    deletedBySender Boolean  @default(false)
}

model Session {
    id         Int      @id @default(autoincrement())
    userId     Int
    token      String   @unique
    fcmToken   String?  @default("")
    deviceName String?  @default("")
    createdAt  DateTime @default(now())
    user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ArchiveChat {
    id       Int     @id @default(autoincrement())
    userId   Int
    chatId   Int
    isPinned Boolean @default(false)
    user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, chatId])
}

model UnarchiveChat {
    id       Int     @id @default(autoincrement())
    userId   Int
    chatId   Int
    isPinned Boolean @default(false)
    user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, chatId])
}

model ChatFolder {
    id              Int               @id @default(autoincrement())
    userId          Int
    folderName      String
    user            User              @relation(fields: [userId], references: [id])
    ChatFolderChats ChatFolderChats[]
}

model ChatFolderChats {
    id         Int        @id @default(autoincrement())
    folderId   Int
    chatId     Int
    isPinned   Boolean    @default(false)
    chatFolder ChatFolder @relation(fields: [folderId], references: [id], onDelete: Cascade)

    @@unique([folderId, chatId])
}
